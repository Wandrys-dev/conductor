% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conductor.R
\name{Conductor}
\alias{Conductor}
\title{Create a "conductor" tour}
\description{
In addition to this page, you can also directly access the documentation
of shepherd.js here: \url{https://shepherdjs.dev/docs/index.html}.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Conductor$new()}}
\item \href{#method-init}{\code{Conductor$init()}}
\item \href{#method-start}{\code{Conductor$start()}}
\item \href{#method-step}{\code{Conductor$step()}}
\item \href{#method-is_active}{\code{Conductor$is_active()}}
\item \href{#method-clone}{\code{Conductor$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Conductor$new(
  exitOnEsc = TRUE,
  keyboardNavigation = TRUE,
  useModalOverlay = TRUE,
  classPrefix = NULL,
  tourName = NULL,
  stepsContainer = NULL,
  modalContainer = NULL,
  confirmCancel = FALSE,
  confirmCancelMessage = NULL,
  defaultStepOptions = NULL,
  mathjax = FALSE,
  onComplete = NULL,
  onCancel = NULL,
  onHide = NULL,
  onShow = NULL,
  onStart = NULL,
  onActive = NULL,
  onInactive = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{exitOnEsc}}{Allow closing the tour by pressing "Escape". Default is
\code{TRUE}.}

\item{\code{keyboardNavigation}}{Allow navigating the tour with keyboard arrows.
Default is \code{TRUE}.}

\item{\code{useModalOverlay}}{Highlight the tour popover and the element (if
specified). Default is \code{TRUE}.}

\item{\code{classPrefix}}{Add a prefix to the classes of the tour. This allows
having different CSS for each tour.}

\item{\code{tourName}}{An (optional) id to give to the tour.}

\item{\code{confirmCancel}}{Ask confirmation to cancel the tour. Default is \code{FALSE}.}

\item{\code{confirmCancelMessage}}{Message in the popup that ask confirmation to
close the tour (only works if \code{confirmCancel = TRUE}).}

\item{\code{defaultStepOptions}}{A nested list of options to apply to the entire
tour. See \code{Details}.}

\item{\code{mathjax}}{Enable MathJax? Default is \code{FALSE}. This requires importing
MathJax, for example with \code{shiny::withMathJax()}.}

\item{\code{onComplete}}{A JavaScript code to run when the tour is completed.}

\item{\code{onCancel}}{A JavaScript code to run when the tour is cancelled}

\item{\code{onHide}}{A JavaScript code to run when the tour is hidden}

\item{\code{onShow}}{A JavaScript code to run when the tour is shown.}

\item{\code{onStart}}{A JavaScript code to run when the tour starts.}

\item{\code{onActive}}{A JavaScript code to run when the tour is active.}

\item{\code{onInactive}}{A JavaScript code to run when the tour is inactive.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Create a new \code{Conductor} object.
}

\subsection{Returns}{
A \code{Conductor} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-init"></a>}}
\if{latex}{\out{\hypertarget{method-init}{}}}
\subsection{Method \code{init()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Conductor$init(session = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{A valid Shiny session. If \code{NULL} (default), the function
attempts to get the session with \code{shiny::getDefaultReactiveDomain()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Initialise \code{Conductor}.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-start"></a>}}
\if{latex}{\out{\hypertarget{method-start}{}}}
\subsection{Method \code{start()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Conductor$start(session = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{A valid Shiny session. If \code{NULL} (default), the function
attempts to get the session with \code{shiny::getDefaultReactiveDomain()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Start \code{Conductor}.
Add a step in a \code{Conductor} tour
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-step"></a>}}
\if{latex}{\out{\hypertarget{method-step}{}}}
\subsection{Method \code{step()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Conductor$step(
  el = NULL,
  title = NULL,
  text = NULL,
  position = NULL,
  arrow = TRUE,
  is_id = TRUE,
  canClickTarget = TRUE,
  advanceOn = NULL,
  scrollTo = TRUE,
  cancelIcon = NULL,
  when = NULL,
  showOn = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{el}}{The element to highlight. It can be an id (for example \verb{#mynav}),
a class (for instance \code{.navbar}), or a general tag (for example \code{button}).
If \code{NULL} (default) or if the selector is not found, the popover will appear
in the center of the page.}

\item{\code{title}}{Title of the popover.}

\item{\code{text}}{Text of the popover.}

\item{\code{position}}{Position of the popover relative to the element. Possible
values are: 'auto', 'auto-start', 'auto-end', 'top', 'top-start', 'top-end',
'bottom', 'bottom-start', 'bottom-end', 'right', 'right-start', 'right-end',
'left', 'left-start', 'left-end'.}

\item{\code{arrow}}{Add an arrow pointing towards the highlighted element? Default
is \code{TRUE}.}

\item{\code{canClickTarget}}{Allow the highlighted element to be clicked? Default is
\code{TRUE}.}

\item{\code{cancelIcon}}{A list of two elements: \code{enabled} is a boolean indicating
whether a "close" icon should be displayed (default is \code{TRUE}); \code{label} is
the label to add for \code{aria-label}.}

\item{\code{showOn}}{Either a boolean or a JavaScript expression that returns \code{true}
or \code{false}. It indicates whether the step should be displayed in the tour.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_active"></a>}}
\if{latex}{\out{\hypertarget{method-is_active}{}}}
\subsection{Method \code{is_active()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Conductor$is_active(session = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Conductor$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
